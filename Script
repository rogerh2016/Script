local PlaceId = game.PlaceId
if PlaceId == 1962086868 then
    -- Tower of Hell Script Execution
    print("Tower of Hell Script Executing")
    task.wait(0.5)
    
    -- Load Discord UI Lib
    local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))()
    if not DiscordLib then
        warn("Discord UI Lib failed to load!")
        return
    end

    -- Create Window and Server (Tab)
    local win = DiscordLib:Window("Tower Of Hell", "by me :P")
    local serv = win:Server("Tower of Hell", "Loading")
    
    -- Create Channels (in order)
    local Main = serv:Channel("Main")
    local Coils = serv:Channel("Coils")
    local Anti = serv:Channel("Anti-Tab")
    local Misc = serv:Channel("Misc")
    
    DiscordLib:Notification("Script Loaded", "Tower of Hell script loaded successfully.", "Got it!")
    
    -------------------------------------------
    -- GLOBAL VARIABLES & UPDATE LOOP
    -------------------------------------------
    local walkSpeedValue = 16
    local jumpPowerValue = 50
    local player = game.Players.LocalPlayer
    local humanoid = nil
    local RunService = game:GetService("RunService")
    local UIS = game:GetService("UserInputService")
    local infJumpEnabled = false

    local function updateSpeedAndJump()
        if humanoid then
            humanoid.WalkSpeed = walkSpeedValue
            humanoid.JumpPower = jumpPowerValue
        end
    end

    RunService.Heartbeat:Connect(function()
        updateSpeedAndJump()
    end)

    -------------------------------------------
    -- BYPASS FUNCTIONS & LOOP STARTER
    -------------------------------------------
    local function antiBanBypass()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local GetBan = ReplicatedStorage:WaitForChild("getBans", 5)
        local AppealBans = ReplicatedStorage:WaitForChild("appealBan", 5)
        local HookingBan = player.Character:WaitForChild("HookBan", 5)
        local kickclient1 = player.Character:WaitForChild("LocalScript", 5)
        local kickclient2 = player.Character:WaitForChild("LocalScript2", 5)
        if GetBan and AppealBans and HookingBan and kickclient1 and kickclient2 then
            GetBan:Destroy()
            AppealBans:Destroy()
            HookingBan:Destroy()
            kickclient1:Destroy()
            kickclient2:Destroy()
            print("Anti-ban: All objects destroyed.")
        elseif HookingBan and kickclient1 and kickclient2 then
            HookingBan:Destroy()
            kickclient1:Destroy()
            kickclient2:Destroy()
            print("Anti-ban: HookBan and kick clients destroyed.")
        elseif HookingBan then
            HookingBan:Destroy()
            print("HookBan destroyed.")
        elseif kickclient1 and kickclient2 then
            print("KickClients already destroyed.")
        else
            print("Bans/kicks already destroyed.")
        end
    end

    local function antiKillBypass(character)
        local StarterPlayer = game:GetService("StarterPlayer")
        local hitbox = StarterPlayer.StarterCharacterScripts:FindFirstChild("hitboxScript")
        local hitboxOnPlayer = character:FindFirstChild("hitboxScript")
        local killScript = character:FindFirstChild("KillScript")
        if hitboxOnPlayer and killScript then
            if hitbox then hitbox:Destroy() end
            hitboxOnPlayer:Destroy()
            killScript:Destroy()
            print("Anti-kill: hitboxScript and KillScript destroyed.")
        else
            print("Anti-kill: one or more kill objects not found.")
        end
    end

    local antiBanLoop, antiKillLoop
    local function startBypassLoops(character)
        if antiBanLoop then task.cancel(antiBanLoop) end
        if antiKillLoop then task.cancel(antiKillLoop) end
        antiBanLoop = task.spawn(function()
            while character.Parent do
                antiBanBypass()
                task.wait(5)
            end
        end)
        antiKillLoop = task.spawn(function()
            while character.Parent do
                antiKillBypass(character)
                task.wait(5)
            end
        end)
    end

    -------------------------------------------
    -- CHARACTER HANDLING
    -------------------------------------------
    local function onCharacterAdded(character)
        humanoid = character:WaitForChild("Humanoid")
        updateSpeedAndJump()
        startBypassLoops(character)
    end

    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then
        onCharacterAdded(player.Character)
    end

    -------------------------------------------
    -- MAIN CHANNEL (Sliders & Toggle)
    -------------------------------------------
    Main:Slider("WalkSpeed", 0, 500, 16, function(val)
        walkSpeedValue = val
        if humanoid then
            humanoid.WalkSpeed = val
        end
    end)

    Main:Slider("JumpPower", 0, 150, 50, function(val)
        jumpPowerValue = val
        if humanoid then
            humanoid.JumpPower = val
        end
    end)

    Main:Toggle("Unlimited Jumps", false, function(state)
        infJumpEnabled = state
        if infJumpEnabled then
            task.spawn(function()
                while infJumpEnabled do
                    if UIS:IsKeyDown(Enum.KeyCode.Space) then
                        local Character = player.Character
                        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
                        local HRP = Character and Character:FindFirstChild("HumanoidRootPart")
                        if Humanoid and HRP then
                            HRP.Velocity = Vector3.new(0, Humanoid.JumpPower, 0)
                        end
                    end
                    task.wait()
                end
            end)
        end
    end)

    -------------------------------------------
    -- COILS CHANNEL (Buttons)
    -------------------------------------------
    Coils:Button("Clone Jump Coil", function()
        local Backpack = player.Backpack
        local jumpCoil = game.ReplicatedStorage.Gear:FindFirstChild("jump")
        if jumpCoil then
            local coil = jumpCoil:Clone()
            coil.Parent = Backpack
        end
    end)

    Coils:Button("Clone Fusion Coil", function()
        local Backpack = player.Backpack
        local fusionCoil = game.ReplicatedStorage.Gear:FindFirstChild("fusion")
        if fusionCoil then
            local coil = fusionCoil:Clone()
            coil.Parent = Backpack
        end
    end)

    -------------------------------------------
    -- ANTI-TAB CHANNEL (Bypass Buttons)
    -------------------------------------------
    Anti:Button("Anti-Ban", function()
        task.spawn(function()
            while true do
                antiBanBypass()
                task.wait(5)
            end
        end)
    end)

    Anti:Button("Anti-Kill", function()
        local StarterPlayer = game:GetService("StarterPlayer")
        local hitbox = StarterPlayer.StarterCharacterScripts:FindFirstChild("hitboxScript")
        local hitboxOnPlayer = player.Character and player.Character:FindFirstChild("hitboxScript")
        local killScript = player.Character and player.Character:FindFirstChild("KillScript")
        if hitboxOnPlayer and killScript then
            task.spawn(function()
                while true do
                    if hitbox then hitbox:Destroy() end
                    hitboxOnPlayer:Destroy()
                    killScript:Destroy()
                    task.wait(5)
                end
            end)
        end
    end)

    Anti:Button("Anti-Fog", function()
        local Fog = game:GetService("ReplicatedStorage").Mutators:FindFirstChild("fog")
        if Fog then
            Fog:Destroy()
        end
    end)

    Anti:Button("Anti-BunnyHop", function()
        local BunnyJump = game:GetService("ReplicatedStorage").Mutators:FindFirstChild("bunny")
        if BunnyJump then
            BunnyJump:Destroy()
        end
    end)

    -------------------------------------------
    -- MISC CHANNEL (Additional Features)
    -------------------------------------------
    Misc:Button("Enable DEX", function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Keyless-mobile-dex-17888"))()
    end)

    Misc:Toggle("AutoJump", false, function(state)
        if state then
            game.ReplicatedStorage.bunnyJumping.Value = true
        else
            game.ReplicatedStorage.bunnyJumping.Value = false
        end
    end)

    DiscordLib:Notification("Script Loaded", "Tower of Hell script loaded successfully.", "Got it!")
    
elseif PlaceId == 110333320616502 then
    ------------------------------
    -- Grace Branch
    ------------------------------
    print("Grace loaded")
    task.wait(0.5)
    print(PlaceId)
    
    local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))()
    if not DiscordLib then
        warn("Discord UI Lib failed to load!")
        return
    end
    
    local win = DiscordLib:Window("Grace", "by me :P")
    local serv = win:Server("Grace", "Loading")
    
    local General = serv:Channel("General")
    local Entites = serv:Channel("Entities")
    local Badges = serv:Channel("Badges")
    
    General:Button("Rejoin", function()
        local TeleportService = game:GetService("TeleportService")
        local player = game.Players.LocalPlayer
        local Rejoin = coroutine.create(function()
            local Success, ErrorMessage = pcall(function()
                TeleportService:Teleport(game.PlaceId, player)
            end)
            if not Success then
                warn(ErrorMessage)
            end
        end)
        coroutine.resume(Rejoin)
    end)
    
    local function moveToWorkspace(scriptObject)
        -- Move the script to Workspace to effectively "disable" it
        if scriptObject then
            scriptObject.Parent = game.Workspace
            print(scriptObject.Name .. " moved to workspace.")
        else
            print("Script object not found.")
        end
    end
    
    local function antiCarnation(state)
        local CarnationScript = game:GetService("ReplicatedStorage"):FindFirstChild("SendRush") and game:GetService("ReplicatedStorage").SendRush:FindFirstChild("Carnation")
        if CarnationScript then
            if state then
                moveToWorkspace(CarnationScript)
                print("Anti-Carnation: Carnation script moved to workspace.")
            else
                -- Reparent it back if needed, but it's not part of this example.
                print("Anti-Carnation: Carnation script is active.")
            end
        else
            print("Anti-Carnation: Carnation script not found.")
        end
    end
    
    local function antiWorm(state)
        local WormScript = game:GetService("ReplicatedStorage"):FindFirstChild("SendWorm")
        if WormScript then
            local SlugFish = WormScript:FindFirstChild("SlugFish")
            if SlugFish then
                if state then
                    moveToWorkspace(SlugFish)
                    print("Anti-Worm: Worm script moved to workspace.")
                else
                    -- Reparent it back if needed, but it's not part of this example.
                    print("Anti-Worm: Worm script is active.")
                end
            else
                print("Anti-Worm: SlugFish not found.")
            end
        else
            print("Anti-Worm: SendWorm script not found.")
        end
    end
    
    local function antiSorrow(state)
        local SorrowScript = game:GetService("ReplicatedStorage"):FindFirstChild("SendSorrow")
        if SorrowScript then
            local rainattackPrototype = SorrowScript:FindFirstChild("rainattackPrototype")
            if rainattackPrototype then
                if state then
                    moveToWorkspace(rainattackPrototype)
                    print("Anti-Sorrow: Sorrow script moved to workspace.")
                else
                    -- Reparent it back if needed, but it's not part of this example.
                    print("Anti-Sorrow: Sorrow script is active.")
                end
            else
                print("Anti-Sorrow: rainattackPrototype not found.")
            end
        else
            print("Anti-Sorrow: SendSorrow script not found.")
        end
    end
    
    -------------------------------------------
    -- ENTITIES CHANNEL (Anti-Carnation, Anti-Worm, Anti-Sorrow Toggles)
    -------------------------------------------
    Entites:Toggle("Anti-Carnation", false, function(state)
        antiCarnation(state)
    end)
    
    Entites:Toggle("Anti-Worm", false, function(state)
        antiWorm(state)
    end)
    
    Entites:Toggle("Anti-Sorrow", false, function(state)
        antiSorrow(state)
    end)
    
    -------------------------------------------
    -- BADGES CHANNEL (GetAllBadge Button)
    -------------------------------------------
    Badges:Button("GetAllBadge", function()
        local args = {
            3164611355775879,
            3438445391730220,
            1245157071611435,
            1257615017477905,
            764126720344552,
            1783264331315392,
            1577853136607350,
            2103017110352506,
            2103017110352506,
            357404882938639,
            3164611355775879,
            1304842223798634,
            3525349095767364,
            1900477898605392,
            357844303001248,
            59892393420936,
            3755020953334282
        }

        -- Fire each badge individually with a short delay between each one
        for _, badgeId in ipairs(args) do
            game:GetService("ReplicatedStorage"):WaitForChild("BadgeGot"):FireServer(badgeId)
            task.wait(0.1) -- Adjust this delay if needed
        end
    end)

elseif PlaceId == 12266201618 then  -- Neon Race HD branch
    -- Load Discord UI Lib
    local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))()
    if not DiscordLib then
        warn("Discord UI Lib failed to load!")
        return
    end

    local win = DiscordLib:Window("Neon Race HD", "by me :P")
    local serv = win:Server("🟣🏃🏻‍♂️‍➡️Neon Race HD", "Loading")

    -- Create channels in order
    local Main = serv:Channel("Main")
    local Misc = serv:Channel("Misc")


    DiscordLib:Notification("Script Loaded", "Neon Race HD script loaded successfully.", "Got it!")

    -------------------------------
    -- GLOBAL VARIABLES & UPDATE LOOP
    -------------------------------
    local player = game.Players.LocalPlayer
    local walkSpeedValue = 16
    local jumpPowerValue = 50
    local RunService = game:GetService("RunService")
    local UIS = game:GetService("UserInputService")
    local humanoid = nil
    local infJumpEnabled = false

    -- Continuously update WalkSpeed and JumpPower on every heartbeat:
    RunService.Heartbeat:Connect(function()
        local character = player.Character
        if character then
            humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = walkSpeedValue
                humanoid.JumpPower = jumpPowerValue
            end
        end
    end)

    -------------------------------
    -- MAIN CHANNEL (Sliders & Toggle)
    -------------------------------
    Main:Slider("WalkSpeed", 0, 500, 16, function(val)
        walkSpeedValue = val
        local character = player.Character
        local h = character and character:FindFirstChildOfClass("Humanoid")
        if h then
            h.WalkSpeed = val
        end
    end)

    Main:Slider("JumpPower", 0, 150, 50, function(val)
        jumpPowerValue = val
        local character = player.Character
        local h = character and character:FindFirstChildOfClass("Humanoid")
        if h then
            h.JumpPower = val
        end
    end)

    Main:Toggle("Unlimited Jumps", false, function(state)
        infJumpEnabled = state
        if state then
            task.spawn(function()
                while infJumpEnabled do
                    if UIS:IsKeyDown(Enum.KeyCode.Space) then
                        local character = player.Character
                        local h = character and character:FindFirstChildOfClass("Humanoid")
                        local hrp = character and character:FindFirstChild("HumanoidRootPart")
                        if h and hrp then
                            hrp.Velocity = Vector3.new(0, h.JumpPower, 0)
                        end
                    end
                    task.wait()
                end
            end)
        end
    end)

    local flying = false
    local flySpeed = 50
    local flySmoothness = 5
    local BodyGyro, BodyVelocity, FlyConnection
    local direction = Vector3.new(0, 0, 0)
    local function updateDirection()
        local moveDir = Vector3.new(0, 0, 0)
        local cam = game.Workspace.CurrentCamera
        local lookVector = cam.CFrame.LookVector
        if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + (lookVector * flySpeed) end
        if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - (lookVector * flySpeed) end
        if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - (cam.CFrame.RightVector * flySpeed) end
        if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + (cam.CFrame.RightVector * flySpeed) end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then moveDir = moveDir + Vector3.new(0, flySpeed, 0) end
        if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir = moveDir - Vector3.new(0, flySpeed, 0) end
        direction = direction:Lerp(moveDir, 1 / flySmoothness)
    end

    local function startFlying()
        if flying then return end
        flying = true
        local character = player.Character
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        local h = character and character:FindFirstChildOfClass("Humanoid")
        if hrp and h then
            h.PlatformStand = true
            BodyGyro = Instance.new("BodyGyro", hrp)
            BodyGyro.P = 90000
            BodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            BodyGyro.CFrame = hrp.CFrame
            BodyVelocity = Instance.new("BodyVelocity", hrp)
            BodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            BodyVelocity.Velocity = Vector3.new(0, 0, 0)
            FlyConnection = RunService.RenderStepped:Connect(function()
                if flying then
                    updateDirection()
                    BodyVelocity.Velocity = direction
                    BodyGyro.CFrame = CFrame.new(hrp.Position, hrp.Position + game.Workspace.CurrentCamera.CFrame.LookVector)
                end
            end)
        end
    end

    local function stopFlying()
        if not flying then return end
        flying = false
        if BodyGyro then BodyGyro:Destroy() end
        if BodyVelocity then BodyVelocity:Destroy() end
        if FlyConnection then FlyConnection:Disconnect() end
        local character = player.Character
        local h = character and character:FindFirstChildOfClass("Humanoid")
        if h then h.PlatformStand = false end
    end

    Main:Toggle("Fly", false, function(state)
        if state then
            startFlying()
        else
            stopFlying()
        end
    end)

    Main:Slider("Fly Speed", 0, 500, 50, function(val)
        flySpeed = val
    end)

    local TweenService = game:GetService("TweenService")
local autoWinTween = nil  -- to store the current tween   
    -------------------------------
    -- ANTI KICK BUTTON
    -------------------------------
    Main:Button("Anti Kick", function()
        local RP = game:GetService("ReplicatedStorage")
        local kickRemote = RP:FindFirstChild("KickRemote")
        local antiCheatEvent = RP:FindFirstChild("AntiCheatEvent")
        local banData = RP:FindFirstChild("BanData")
        local applyTime = RP:FindFirstChild("ApplyTime")
            or RP:FindFirstChild("ApplyTime2")
            or RP:FindFirstChild("ApplyTime3")
            or RP:FindFirstChild("ApplyTime4")
        if kickRemote then
            kickRemote:Destroy()
            print("KickRemote removed.")
        else
            print("KickRemote not found or already removed.")
        end
        if antiCheatEvent then
            antiCheatEvent:Destroy()
            print("AntiCheatEvent removed.")
        else
            print("AntiCheatEvent not found or already removed.")
        end
        if banData then
            banData:Destroy()
            print("BanData removed.")
        else
            print("BanData not found or already removed.")
        end
        if applyTime then
            applyTime:Destroy()
            print("ApplyTime removed.")
        else
            print("ApplyTime not found or already removed.")
        end
    end)

    -------------------------------
    -- MUSIC TOGGLE
    -------------------------------
    Main:Toggle("Remove Music", false, function(state)
        local Music = workspace:FindFirstChild("BGM")
        if Music then
            if state then
                Music.Playing = false
            else
                Music.Playing = true
                Music.TimePosition = 0
            end
        else
            print("No music found in workspace!")
        end
    end)

    -------------------------------
    -- MISC CHANNEL
    -------------------------------
    Misc:Button("Enable DEX", function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Keyless-mobile-dex-17888"))()
    end)
   
    DiscordLib:Notification("Script Loaded", "Neon Race HD script loaded successfully.", "Got it!")

elseif PlaceId == 5076734934 then
print("Rooms loading...")
task.wait(0.1)
print(PlaceId)

local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))()
    if not DiscordLib then
        warn("Discord UI Lib failed to load!")
        return
    end
    
    local win = DiscordLib:Window("Rooms", "by me :P")
    local serv = win:Server("Rooms", "Loading")
    
    local Main = serv:Channel("Main")
    local Entites = serv:Channel("Entites")
    
    local walkSpeedValue = 16
    local jumpPowerValue = 50
    local player = game.Players.LocalPlayer
    
    local function updateSpeedAndJump()
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = walkSpeedValue
            humanoid.JumpPower = jumpPowerValue
        end
    end
    game:GetService("RunService").Heartbeat:Connect(function()
        updateSpeedAndJump()
    end)
    
    Main:Slider("WalkSpeed", 0, 500, 16, function(val)
        walkSpeedValue = val
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = val
        end
    end)
    Main:Slider("JumpPower", 0, 150, 50, function(val)
        jumpPowerValue = val
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = val
        end
    end)


Main:Button("Clone Gummy Flashlight", function()
        local Backpack = player.Backpack
        local Gummy = game.Lighting:FindFirstChild("Gummy Flashlight")
        if Gummy then
            local GummyFlashLight = Gummy:Clone()
            GummyFlashLight.Parent = Backpack
        end
    end)

    Entites:Button("Anti-A-60", function()
        local Monster = workspace:FindFirstChild("monster")
            if Monster then
                Monster:Destroy()       
            end
        end)

         Entites:Button("Anti-A-200", function()
        local SecMonster = workspace:FindFirstChild("monster2")
            if SecMonster then
                SecMonster:Destroy()   
            end
        end)

    
elseif PlaceId  == 9585537847 then
    -- Create a UI button using the Discord library or another UI method

-- Create a UI button using the Discord library or another UI method
local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))()
local win = DiscordLib:Window("Shadvois RPG", "by me :P")
local serv = win:Server("Shadvois RPG", "Controls")

-- Create a channel for buttons
local Controls = serv:Channel("Controls")

-- Function to perform sword swing (auto attack)
local function autoSwingSword()
    local args = {
        "Input",
        "Basic Sword",  -- Weapon name or type
        0.2831389427185058,  -- Attack power or time (modify as needed)
        "SlashEvent",  -- Event name (check your event name)
        Instance.new("Part", nil)  -- Placeholder, can be replaced with specific object if needed
    }
    game:GetService("Players").LocalPlayer.Character:WaitForChild("Combat"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end

-- Function to start auto-swinging the sword at intervals
local function startAutoSwing()
    while true do
        -- Call the swing function every 1 second (adjust as needed)
        autoSwingSword()
        task.wait(1)  -- Delay between each attack (you can adjust this to make it faster or slower)
    end
end

-- Variable to control whether auto-swing is running
local autoSwingRunning = false
local autoSwingThread = nil

-- Button to toggle auto-swing of the sword
Controls:Button("Toggle Auto Swing", function()
    if autoSwingRunning then
        -- If auto-swing is already running, stop it
        autoSwingRunning = false
        if autoSwingThread then
            autoSwingThread:Disconnect()
            autoSwingThread = nil
        end
        print("Auto Swing Stopped")
    else
        -- If auto-swing is not running, start it
        autoSwingRunning = true
        autoSwingThread = coroutine.wrap(startAutoSwing)
        autoSwingThread()  -- Start the auto-swing function
        print("Auto Swing Started")
    end
end)

    
    
else

    ------------------------------
    -- Universal Branch
    ------------------------------
    print("Universal Script Executing")
    task.wait(0.5)
    
    local DiscordLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))()
    if not DiscordLib then
        warn("Discord UI Lib failed to load!")
        return
    end
    
    local win = DiscordLib:Window("Universal", "by me :P")
    local serv = win:Server("Universal", "Loading")
    
    local Main = serv:Channel("Main")
    local Misc = serv:Channel("Misc")
    
    local walkSpeedValue = 16
    local jumpPowerValue = 50
    local player = game.Players.LocalPlayer
    
    local function updateSpeedAndJump()
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = walkSpeedValue
            humanoid.JumpPower = jumpPowerValue
        end
    end
    game:GetService("RunService").Heartbeat:Connect(function()
        updateSpeedAndJump()
    end)
    
    Main:Slider("WalkSpeed", 0, 500, 16, function(val)
        walkSpeedValue = val
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = val
        end
    end)
    Main:Slider("JumpPower", 0, 150, 50, function(val)
        jumpPowerValue = val
        local character = player.Character
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.JumpPower = val
        end
    end)
    Misc:Button("Enable DEX", function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Keyless-mobile-dex-17888"))()
    end)
    
    DiscordLib:Notification("Script Loaded", "Universal script loaded successfully.", "Got it!")   
end
